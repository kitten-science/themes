@use "sass:map";
@use "sass:math";
@use "../behaviors";
@use "../common";
@use "../icons";

@mixin root {
  z-index: 3;

  // Container for actual loadout configurations.
  // Do not unwrap. Container is required for layout purposes.
  float: none !important;

  display: flex;

  flex-direction: column-reverse;

  grid-row: 2 / 50;
  grid-column: 1 / 11;

  place-items: end;
  place-self: start end;

  width: initial !important;

  // Loadout
  >.btn.modern {
    display: contents !important;

    // An actual Loadout
    .btnContent {
      position: relative;

      display: grid;

      grid-template-columns: repeat(2, var(--font-size-base)) auto repeat(3, var(--font-size-base));

      justify-self: end;

      max-width: calc(var(--font-size-base) * 1);
      max-height: calc(var(--font-size-base) * 1);

      overflow: hidden;

      font-size: var(--font-size-base);

      background-color: var(--color-background);
      border: 1px solid var(--color-primary-dim);
      border-radius: var(--font-size-base);

      transition: max-width 1s, max-height 1s, border-radius 1s;

      &:hover {
        max-width: calc(var(--font-size-base) * 10);
        max-height: calc(var(--font-size-base) * 3);

        border-radius: 0;

        &::before {
          opacity: 0;
        }
      }

      // Loadout Actions
      > div {
        display: contents !important;

        .linkContent {
          display: contents !important;
        }
      }

      .linkContent *,
      a {
        float: none !important;

        grid-row: 2;

        padding: 0 !important;

        font-size: calc(var(--font-size-base) * 0.5);

        line-height: calc(var(--font-size-base) * 0.5);

        color: var(--color-text);

        opacity: 0.5;
      }

      // Actual title of the loadout, activate button
      span.btnTitle {
        display: flex;

        flex-direction: row-reverse;

        grid-row: 1;
        grid-column: 3/7;

        place-items: start;
        justify-content: space-between;

        font-size: var(--font-size-small);

        color: var(--color-text);

        @include common.icon-before(map.get(icons.$icons, "loadoutActivate"),6);
        @include behaviors.icon-button;

        &::before {
          margin-left: calc(var(--font-size-base) * 2);
        }
      }

      // Rename
      a.dropdown-link {
        grid-row: 1;
        grid-column: 2/3;

        @include common.icon-instead(map.get(icons.$icons, "__missing"));
        @include behaviors.icon-button;
      }

      // Delete
      a.dropdown-link + a.dropdown-link {
        grid-row: 1;
        grid-column: 1/2;

        @include common.icon-instead(map.get(icons.$icons, "delete"));
        @include behaviors.icon-button;
      }

      // Save/update loadout
      a.saveLink {
        z-index: 2;

        grid-row: 1;
        grid-column: 4/5;

        @include common.icon-instead(map.get(icons.$icons, "saveUpdate"));
        @include behaviors.icon-button;
      }

      // Pin
      a[class=""] {
        z-index: 2;

        grid-row: 1;
        grid-column: 5/6;

        padding: 0 !important;

        @include common.icon-instead(map.get(icons.$icons, "pin"));
        @include behaviors.icon-button;
      }
    }

    @for $i from 3 through 22 {
      &:nth-last-child(#{$i}) .btnContent::before {
        position: absolute;
        top: -3px;
        right: 0;
        z-index: 2;

        display: inline-block;

        width: var(--font-size-base);
        height: var(--font-size-base);

        color: var(--color-text-dim);

        text-align: center;

        pointer-events: none;

        content: "#{$i - 2}";

        background-color: var(--color-background);

        transition: opacity 1s;
      }
    }
  }

  // Delete all & Toggle Defaults
  .loadoutHref {
    float: none !important;

    // #pragma ux_loss
    display: none;

    font-size: var(--font-size-base);

    color: var(--color-text);
  }

  // Toggle Defaults
  > .loadoutHref:last-child {
    z-index: 3;

    @include common.icon-instead(map.get(icons.$icons, "loadoutDefault"));
    @include behaviors.icon-button;
  }
}
