@use "sass:map";
@use "../behaviors";
@use "../common";
@use "../icons";

@mixin root {
  display: contents !important;

  // Contents consists of two table columns, which need to be unwrapped.

  // Happiness/Festival Duration
  // Has only text content.
  td:first-child {
    cursor: default !important;
    user-select: none;

    grid-column: 2 / 10;
    grid-row: 1 / 2;
    place-self: end end;

    width: initial !important;

    font-size: var(--font-size-smaller);
    line-height: var(--font-size-smaller);
    color: var(--color-text-dim);
    text-align: right !important;

    br + br {
      display: none;
    }
  }

  // Unwrap contents
  .container {
    display: contents !important;

    table {
      display: contents !important;

      tr {
        display: contents !important;

        // The first td is the 'Happiness/Festival Duration' section,
        // which does not need its contents unwrapped.
        td + td {
          display: contents !important;

          .btn.modern {
            display: contents !important;

            .btnContent {
              display: contents !important;
            }
          }
        }
      }
    }
  }

  // Hunt/Festival/Optimize Jobs/Promote Kittens/Present Box

  // Send hunters
  .btn.modern[aria-description~="hunters"] {
    .btnTitle {
      @include common.icon-instead(map.get(icons.$icons, "hunt"));
      @include behaviors.icon-button;

      grid-column: 1 / 2;
      grid-row: 5 / 6;
    }
  }

  // Hold Festival
  .btn.modern[aria-description~="festival"] {
    // x1
    .btnTitle {
      @include common.icon-instead(map.get(icons.$icons, "festival"));
      @include behaviors.icon-button;

      grid-column: 1 / 2;
      grid-row: 1 / 2;
    }

    // x10
    a[class=""] {
      @include common.icon(map.get(icons.$icons, "festival"));
      @include common.debug-marker(2);

      cursor: pointer;
      user-select: none;

      float: none !important;
      grid-column: 2 / 3;
      grid-row: 1 / 2;

      padding: 0 !important;

      color: var(--color-text);
    }

    // x100
    a.rightestLink {
      @include common.icon(map.get(icons.$icons, "festival"));
      @include common.debug-marker(2);

      cursor: pointer;
      user-select: none;

      float: none !important;
      grid-column: 3 / 4;
      grid-row: 1 / 2;

      padding: 0 !important;

      color: var(--color-text);
    }
  }

  // Manage Jobs (Optimize)
  .btn.modern[aria-description~="distribution"] {
    .btnTitle {
      @include common.icon-instead(map.get(icons.$icons, "jobOptimize"));
      @include behaviors.icon-button;

      z-index: 2;
      grid-column: 2 / 3;
      grid-row: 10 / 11;
    }
  }

  // Promote kittens
  .btn.modern[aria-description~="promotes"] {
    .btnTitle {
      @include common.icon-instead(map.get(icons.$icons, "promoteAll"));
      @include behaviors.icon-button;

      z-index: 2;
      grid-column: 9 / 10;
      grid-row: 10 / 11;
    }
  }

  // Unwrap present box
  .btn.modern[aria-description=""] {
    .btnTitle {
      @include common.icon-instead(map.get(icons.$icons, "presentBox"));
      @include behaviors.icon-button-pulse;

      /* stylelint-disable-next-line no-duplicate-selectors */
      & {
        position: absolute;
        z-index: 2;
        grid-column: 1 / 2;
        grid-row: 14 / 16;
      }
    }
  }
}
