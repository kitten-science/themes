@use "sass:map";
@use "../behaviors";
@use "../common";
@use "../icons";

@mixin root {
  display: contents;

  .container {
    display: contents;

    .currentGovernment {
      display: contents;
      padding: 0 !important;

      @include common.icon-before(map.get(icons.$icons, "leaderMake"), 1, 11, 13);
    }
  }

  // Name <span>, Trait (Bonus) [rank 12]
  .currentLeader:nth-child(1) {
    cursor: default;
    user-select: none;

    position: relative;

    display: grid;
    grid-column: 2 / 10;
    grid-row: 11 / 13;

    margin-bottom: 0 !important;
    margin-left: calc(var(--spacing-more) * -1);

    font-size: var(--font-size-smaller);
    color: var(--color-primary);

    clip-path: margin-box;

    // "Leader:" label
    >span:first-child {
      display: none;
    }

    // Name of the leader kitten.
    >span.name {
      cursor: default;
      user-select: none;

      grid-row: 1;

      margin-bottom: calc(var(--spacing-base) * -1);
      padding: 0 0 0 var(--spacing-more) !important;

      font-size: var(--font-size-base);
      color: var(--color-primary);
    }
  }

  // exp: 123.45K (12%)
  .currentLeader:nth-child(2) {
    cursor: default;
    user-select: none;

    z-index: 1;
    transform: translateY(var(--spacing-most));

    grid-column: 2 / 10;
    grid-row: 11 / 12;
    place-self: start end;

    margin: 0 !important;

    font-size: var(--font-size-smaller);
    color: var(--color-text-dim);
  }

  // Job bonus: x1.2 (Job)
  .currentLeader:nth-child(3) {
    cursor: default;
    user-select: none;

    transform: translateY(var(--spacing-most));

    grid-column: 3 / 10;
    grid-row: 10 / 11;
    place-self: end end;

    font-size: var(--font-size-smallest);
    color: var(--color-text-dim);
    text-align: right;
  }

  // Promote Leader
  .currentLeader + a {
    z-index: 2;
    grid-column: 2 / 10;
    grid-row: 11 / 12;
    color: var(--color-text);
  }

  // Unassign Leader
  .currentLeader ~ a {
    z-index: 2;

    grid-column: 1 / 2;
    grid-row: 11 / 13;

    color: var(--color-text);

    opacity: 0;
    background-color: var(--color-background);

    transition: opacity 1s;

    &:hover {
      opacity: 1;
    }

    @include common.icon-instead(map.get(icons.$icons, "leaderUnassign"));
  }

  .censusFilters {
    display: flex;
    grid-column: 2 / 10;
    grid-row: 13 / 14;
    justify-self: center;

    height: initial !important;
    margin-top: var(--spacing-more);

    line-height: 0;

    select {
      cursor: pointer;
      user-select: none;

      float: none !important;

      border: none;

      font-size: var(--font-size-smallest);
      color: var(--color-text-dimmer);
      text-align: center;
    }
  }

  // A kitten in the population.
  // Has 2 rows:
  //   1. Kitten information: Title/age/rank
  //   2. Interaction elements: Favorite/make leader
  .census-block {
    display: grid;
    grid-column: 1 / 10;
    grid-template-columns: subgrid;
    place-items: center center;

    margin-top: var(--spacing-base);

    >div:first-child {
      display: flex !important;
      grid-column: 2 / 10;
      grid-row: 1 / 3;
      flex-flow: row wrap;
      gap: 0 var(--spacing-base);

      .info {
        cursor: default;
        user-select: none;

        flex-basis: 1;

        font-size: var(--font-size-smallest);
        color: var(--color-text-dim);

        .name {
          cursor: default;
          user-select: none;
          font-size: var(--font-size-smaller);
          color: var(--color-text);
        }
      }

      .skill {
        cursor: default;
        user-select: none;

        font-size: var(--font-size-smallest);
        font-weight: initial !important;
        color: var(--color-text-dim);
      }

      br {
        display: none;
      }
    }

    .links-container {
      display: contents !important;

      span.btn.modern,
      a.unassignHref {
        cursor: default;
        user-select: none;

        display: grid;
        grid-row: 1 / 3;

        width: var(--font-size-base) !important;

        transition: opacity 1s;

        // Promote/upgrade
        &.promoteHref {
          grid-column: 9 / 10;

          @include common.icon-instead(map.get(icons.$icons, "promote"));
          @include behaviors.icon-button-pulse;
        }

        // Favorite kitten
        &.favoriteHref {
          grid-column: 2 / 3;

          @include common.icon-instead(map.get(icons.$icons, "favorite"));
          @include behaviors.icon-button(0);
        }

        // Make leader
        &.leaderHref {
          grid-column: 1 / 2;

          @include common.icon-instead(map.get(icons.$icons, "leaderMake"));
          @include behaviors.icon-button(0);
        }
      }

      // Unassign from job
      a.unassignHref {
        grid-column: 8 / 9;

        @include common.icon-instead(map.get(icons.$icons, "unassign"));
        @include behaviors.icon-button(0);
      }
    }

    &:hover {
      a.unassignHref,
      span.btn.modern.favoriteHref,
      span.btn.modern.leaderHref {
        opacity: 0.6;
      }
    }

    &.simLeader {
      display: contents;

      >div:first-child {
        display: flex !important;
        grid-column: 2 / 10;
        grid-row: 13 / 14;
        flex-wrap: wrap;
        gap: 0;
        justify-content: space-evenly;

        div.info {
          // #pragma ux_loss We no longer see the age of the leader kitten.
          display: none;

          .name {
            // We already have the name from the .currentLeader section.
            display: none;
          }
        }

        .skill {
          grid-row: 13 / 14;
        }
      }

      span.btn.modern,
      a.unassignHref {
        z-index: 2;
        grid-column: 8 / 9;
        grid-row: 11 / 13;
        align-self: end;
      }

      // We have the dedicated "Unassign leader" action already.
      span.btn.modern.leaderHref {
        display: none;
      }
    }
  }

  // Pagination
  .container > *:last-child {
    cursor: default;
    user-select: none;

    display: grid !important;
    grid-column: 2 / 10;
    grid-row: 14/15;
    justify-self: normal;

    width: initial !important;
    margin: 0 0 var(--spacing-base) 0 !important;

    font-size: var(--font-size-smallest);
    color: var(--color-text-dimmer);
    text-align: initial !important;

    .lastHref,
    .nextHref,
    .firstHref,
    .previousHref {
      cursor: pointer;
      user-select: none;

      float: none !important;

      font-size: var(--font-size-smallest);
      color: var(--color-text-dimmest);
      text-decoration: none;

      visibility: visible !important;
    }

    .firstHref {
      grid-column: 1/2;
      grid-row: 1;
    }

    .previousHref {
      grid-column: 2/3;
      grid-row: 1;
    }

    .nextHref {
      grid-column: 4/5;
      grid-row: 1;
    }

    .lastHref {
      grid-column: 5/6;
      grid-row: 1;
    }
  }

  &:has(.census-block.simLeader) {
    .censusFilters {
      grid-row: 14 / 15;
    }

    .container > *:last-child {
      grid-row: 15 / 16;
    }
  }
}
