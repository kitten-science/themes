@use "sass:map";
@use "../common";
@use "../icons";

@mixin job($row, $icon) {
  .btnContent {
    display: contents !important;

    // Job Actions
    >div {
      display: contents !important;

      .linkContent {
        display: contents !important;
      }
    }
  }

  font-size: var(--font-size-base);

  color: var(--color-text);

  @include common.icon-before(map.get(icons.$icons, $icon), 1, $row);

  .btnTitle {
    grid-row: $row;
    grid-column: 2 / 10;

    @include common.debug-marker(1);
  }

  // Job Actions
  a.dropdown-link,
  .assignLink,
  .unassignLink {
    float: none !important;

    grid-row: $row;

    padding: 0 !important;

    font-size: calc(var(--font-size-base) * 0.5);

    line-height: calc(var(--font-size-base) * 0.5);

    color: var(--color-text);

    opacity: 0.5;
  }

  .dropdown-link[title="[-all]"] {
    grid-column: 2;
  }

  .dropdown-link[title="[-25]"] {
    grid-column: 3;
  }

  .dropdown-link[title="[-5]"] {
    grid-column: 4;
  }

  .unassignLink {
    grid-column: 5;
  }

  .assignLink {
    grid-column: 6;
  }

  .dropdown-link[title="[+5]"] {
    grid-column: 7;
  }

  .dropdown-link[title="[+25]"] {
    grid-column: 8;
  }

  .dropdown-link[title="[+all]"] {
    grid-column: 9;
  }
}

@mixin jobs {
  display: contents !important;

  // Unwrap contents
  .container {
    display: contents !important;

    // Loadout tools
    table {
      display: contents !important;

      tr {
        display: contents !important;

        td:first-child {
          display: none;
        }

        td:last-child {
          display: contents !important;

          font-size: 0;
        }
      }
    }

    // Container for actual loadout configurations.
    .loadout {
      // Do not unwrap. Container is required for layout purposes.
      float: none !important;

      width: initial !important;

      // Loadout
      >.btn.modern {
        display: contents !important;

        // Loadout Actions
        .btnContent > div {
          display: contents !important;

          .linkContent {
            display: contents !important;
          }
        }
      }
    }
  }

  .loadout {
    z-index: 2;

    display: flex;

    flex-direction: column-reverse;

    grid-row: 1 / 1000;
    grid-column: 9 / 11;

    align-items: end;
    align-self: start;
  }

  // An actual Loadout
  .loadout .btnContent {
    display: grid;

    grid-template-columns: auto;

    align-items: center;
    justify-self: end;

    width: calc(var(--font-size-base) * 3);
    height: calc(var(--font-size-base) * 3);

    overflow: hidden;

    font-size: var(--font-size-base);

    color: var(--color-background);

    border-radius: 50%;

    @include common.debug-marker(4);

    span.btnTitle {
      grid-row: 1;
      grid-column: 2 / 10;

      border: 1px solid pink;
    }

    // Loadout Actions
    .linkContent *,
    a {
      float: none !important;

      grid-row: 2;

      padding: 0 !important;

      font-size: calc(var(--font-size-base) * 0.5);

      line-height: calc(var(--font-size-base) * 0.5);

      color: var(--color-text);

      opacity: 0.5;
    }

    .btnTitle {
      font-size: var(--font-size-base);

      color: var(--color-text);

      @include common.icon-before(map.get(icons.$icons, "loadoutActivate"));
    }

    // Rename
    a.dropdown-link {
      grid-row: 1;
    }

    // Delete
    a.dropdown-link + a.dropdown-link {
      grid-row: 1;

      @include common.icon-instead(map.get(icons.$icons, "delete"));
    }

    a.saveLink {
      grid-row: 1;

      @include common.icon-instead(map.get(icons.$icons, "saveUpdate"));
    }

    // Pin
    a[class=""] {
      grid-row: 1;

      padding: 0 !important;

      font-size: var(--font-size-base);

      color: var(--color-text);
    }
  }

  // Delete all & Toggle Defaults
  .loadout > .loadoutHref {
    float: none !important;

    // #pragma ux_loss
    display: none;

    font-size: var(--font-size-base);

    color: var(--color-text);
  }

  // Toggle Defaults
  .loadout > *:last-child {
    @include common.icon-instead(map.get(icons.$icons, "loadoutDefault"));
    @include common.debug-marker(4);

    z-index: 3;
  }

  // Create Loadout
  td a.loadoutHref {
    @include common.icon-instead(map.get(icons.$icons, "loadoutCreate"));
    @include common.debug-marker(4);

    position: absolute;
    right: calc(var(--font-size-base) * 2);
    z-index: 3;
    float: none !important;
  }

  // Actual Job assignments
  .container > .btn.modern {
    display: contents !important;

    // Woodcutter
    &[aria-description~="wood"] {
      @include job(3, "woodcutter");
    }

    // Farmer
    &[aria-description~="catnip"] {
      @include job(4, "farmer");
    }

    // Scholar
    &[aria-description~="science"] {
      @include job(5, "scholar");
    }

    // Hunter
    &[aria-description~="catpower"] {
      @include job(6, "hunter");
    }

    // Miner
    &[aria-description~="mineral"] {
      @include job(7, "miner");
    }

    // Priest
    &[aria-description~="faith"] {
      @include job(8, "priest");
    }

    // Geologist
    &[aria-description~="coal"] {
      @include job(9, "geologist");
    }

    // Engineer
    &[aria-description~="automate"] {
      @include job(10, "engineer");
    }

    // Clear job assignments
    &[aria-description~="all"] .btnContent {
      grid-row: 11;
      grid-column: 1 / 12;

      @include common.icon-instead(map.get(icons.$icons, "clear"));

      .btnTitle {
        display: none;
      }
    }
  }

  // This is a `clear: both` style div to control float-based layout.
  .container > :last-child {
    display: none;
  }
}

@mixin management {
  display: contents !important;

  * {
    @include common.debug-marker(2);
  }

  // Unwrap contents
  .container {
    display: contents !important;

    table {
      display: contents !important;

      tr {
        display: contents !important;

        // The first td is the 'Happiness/Festival Duration' section,
        // which does not need its contents unwrapped.
        td + td {
          display: contents !important;

          .btn.modern {
            display: contents !important;

            .btnContent {
              display: contents !important;
            }
          }
        }
      }
    }
  }

  // Contents consists of two table columns, which need to be unwrapped.

  // Happiness/Festival Duration
  // Has only text content.
  td:first-child {
    grid-row: 2;
    grid-column: 1 / 10;

    width: initial !important;
    max-width: 40vmin;

    font-size: calc(var(--font-size-base) * 0.5);

    text-align: initial !important;

    cursor: default !important;

    br {
      display: none;
    }
  }

  // Hunt/Festival/Optimize Jobs/Promote Kittens/Present Box

  // Send hunters
  .btn.modern[aria-description~="hunters"] {
    .btnTitle {
      grid-row: 6;
      grid-column: 6 / 10;
    }
  }

  // Hold Festival
  .btn.modern[aria-description~="festival"] {
    @include common.icon-before(map.get(icons.$icons, "festival"), 1, 1);

    // x1
    .btnTitle {
      grid-row: 1;
      grid-column: 2 / 8;
    }

    // x100
    a.rightestLink {
      float: none !important;

      grid-row: 1;
      grid-column: 7 / 10;

      padding: 0 !important;

      color: var(--color-text);
    }

    // x10
    a[class=""] {
      float: none !important;

      grid-row: 1;
      grid-column: 4 / 7;

      padding: 0 !important;

      color: var(--color-text);
    }
  }

  // Manage Jobs
  .btn.modern[aria-description~="distribution"] {
    .btnTitle {
      @include common.icon-instead(map.get(icons.$icons, "jobOptimize"));
      z-index: 2;

      grid-row: 11;
      grid-column: 8 / 9;
    }
  }

  // Promote kittens
  .btn.modern[aria-description~="promotes"] {
    .btnTitle {
      @include common.icon-instead(map.get(icons.$icons, "promoteAll"));

      z-index: 2;

      grid-row: 11;
      grid-column: 7 / 8;
    }
  }

  // Unwrap present box
  .btn.modern[aria-description=""] {
    .btnTitle {
      @include common.icon-instead(map.get(icons.$icons, "presentBox"));
      position: absolute;
      z-index: 2;

      grid-row: 14;
      grid-column: 1 / 2;
    }
  }
}

@mixin census {
  display: contents;

  .container {
    display: contents;

    .currentGovernment {
      display: contents;

      padding: 0 !important;
    }
  }

  // Name <span>, Trait (Bonus) [rank 12]
  .currentLeader:nth-child(1) {
    @include common.debug-marker(1);

    position: relative;

    display: grid;

    grid-row: 12 / 14;
    grid-column: 2 / 10;

    max-width: 40vmin;

    margin-bottom: 0 !important;

    font-size: calc(var(--font-size-base) * 0.5);

    color: var(--color-primary);

    // "Leader:" label
    >span:first-child {
      display: none;
    }

    // Name of the leader kitten.
    >span.name {
      grid-row: 1;

      padding: 0 !important;

      font-size: var(--font-size-base);

      color: var(--color-primary);
    }
  }

  // exp: 123.45K (12%)
  .currentLeader:nth-child(2) {
    @include common.debug-marker(1);

    grid-row: 11;
    grid-column: 2 / 5;

    margin: 0 !important;

    font-size: calc(var(--font-size-base) * 0.5);
  }

  // Job bonus: x1.2 (Job)
  .currentLeader:nth-child(3) {
    @include common.debug-marker(1);
    grid-row: 11;
    grid-column: 5 / 10;

    font-size: calc(var(--font-size-base) * 0.5);
  }

  // Promote Leader
  .currentLeader + a {
    @include common.debug-marker(1);

    z-index: 2;

    grid-row: 12;
    grid-column: 2 / 10;

    color: var(--color-text);
  }

  // Unassign Leader
  .currentLeader ~ a {
    @include common.debug-marker(1);

    z-index: 2;

    grid-row: 11;
    grid-column: 9 / 10;

    color: var(--color-text);

    @include common.icon-instead(map.get(icons.$icons, "leaderUnassign"));
  }

  .censusFilters {
    grid-row: 15;
    grid-column: 2 / 10;

    height: initial !important;

    line-height: 0;

    @include common.debug-marker(3);

    select {
      float: none !important;

      font-size: calc(var(--font-size-base) * 0.5);

      color: var(--color-text);
    }
  }

  // A kitten in the population.
  // Has 2 rows:
  //   1. Kitten information: Title/age/rank
  //   2. Interaction elements: Favorite/make leader
  .census-block {
    display: grid;

    grid-template-columns: subgrid;
    grid-column: 1 / 10;

    >div:first-child {
      display: contents !important;

      @include common.debug-marker(3);

      font-size: calc(var(--font-size-base) * 0.5);

      .info {
        @include common.debug-marker(3);

        grid-row: 1;
        grid-column: 2 / 10;

        font-size: calc(var(--font-size-base) * 0.5);

        color: var(--color-text-dim);

        .name {
          font-size: calc(var(--font-size-base) * 0.5);

          color: var(--color-text);
        }
      }

      .skill {
        @include common.debug-marker(3);

        grid-row: 2;
        grid-column: 2 / 10;

        font-size: calc(var(--font-size-base) * 0.4);
        font-weight: initial !important;

        color: var(--color-text);
      }

      br {
        display: none;
      }
    }

    .links-container {
      display: contents !important;

      span.btn.modern,
      a.unassignHref {
        display: grid !important;

        grid-row: 1 / 3;

        width: var(--font-size-base) !important;

        @include common.debug-marker(3);

        &.promoteHref {
          grid-column: 6 / 7;

          @include common.icon-instead(map.get(icons.$icons, "promote"));
        }

        &.favoriteHref {
          grid-column: 7 / 8;

          @include common.icon-instead(map.get(icons.$icons, "favorite"));
        }

        &.leaderHref {
          grid-column: 8 / 9;

          @include common.icon-instead(map.get(icons.$icons, "leaderMake"));
        }
      }

      .unassignHref {
        grid-column: 9 / 10;

        @include common.icon-instead(map.get(icons.$icons, "unassign"));
      }
    }

    &.simLeader {
      @include common.icon-before(map.get(icons.$icons, "leaderMake"), 1, 12);

      display: contents;

      >div:first-child {
        @include common.debug-marker(3);

        grid-row: 14;
        grid-column: 2 / 10;

        div.info {
          // #pragma ux_loss We no longer see the age of the leader kitten.
          display: none;

          .name {
            // We already have the name from the .currentLeader section.
            display: none;
          }
        }

        .skill {
          @include common.debug-marker(3);

          grid-row: 14;
        }
      }

      span.btn.modern,
      a.unassignHref {
        @include common.debug-marker(3);

        z-index: 2;

        grid-row: 12;
      }
    }
  }

  // Pagination
  .container > *:last-child {
    display: initial !important;

    grid-row: 15 / 16;
    grid-column: 2 / 10;

    width: initial !important;

    margin: 0 !important;

    font-size: calc(var(--font-size-base) * 0.5);

    color: var(--color-text);

    text-align: initial !important;

    @include common.debug-marker(3);

    .lastHref,
    .nextHref,
    .firstHref,
    .previousHref {
      float: none !important;

      font-size: calc(var(--font-size-base) * 0.5);

      color: var(--color-text);
    }
  }
}

@mixin village {
  position: relative;

  display: grid;

  .panelContainer {
    .toggle {
      display: none;
    }

    .title {
      display: none;
    }
  }

  // Jobs
  .panelContainer:nth-child(1) {
    @include jobs;
  }

  // Map (currently disabled in-game)
  // .panelContainer:nth-child(2) {}

  // Management
  .panelContainer:nth-child(3) {
    @include management;
  }

  // Census
  .panelContainer:nth-child(4) {
    @include census;
    @include common.debug-marker(3);
  }
}
