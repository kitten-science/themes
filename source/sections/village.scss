@use "sass:map";
@use "../common";
@use "../icons";

@mixin job($row, $icon) {
  .btnContent {
    &::before {
      content: "";
      width: var(--font-size-base);
      height: var(--font-size-base);
      line-height: var(--font-size-base);
      font-size: 0;
      background-repeat: no-repeat;
      background-size: contain;
      background-image: $icon;
    }

    display: grid;
    grid-template-columns: repeat(9, 1fr);
    grid-column: 1 / 3;
    grid-row: $row;
    align-items: center;

    font-size: var(--font-size-base);
    color: var(--color-text);

    span.btnTitle {
      grid-column: 2 / 10;
      grid-row: 1;

      border: 1px solid pink;
    }

    // Job Actions
    >div {
      float: none !important;
      display: contents !important;

      .linkContent {
        display: contents !important;
        position: relative !important;
        float: none !important;
        margin: 0 !important;
        z-index: 0 !important;
        left: initial !important;
      }

      .linkContent a.dropdown-link,
      .assignLink,
      .unassignLink {
        float: none !important;
        padding: 0 !important;

        grid-row: 1;

        font-size: calc(var(--font-size-base) * 0.5);
        line-height: calc(var(--font-size-base) * 0.5);
        color: var(--color-text);
        opacity: 0.5;
      }

      .dropdown-link[title="[-all]"] {
        grid-column: 2;
      }

      .dropdown-link[title="[-25]"] {
        grid-column: 3;
      }

      .dropdown-link[title="[-5]"] {
        grid-column: 4;
      }

      .unassignLink {
        grid-column: 5;
      }

      .assignLink {
        grid-column: 6;
      }

      .dropdown-link[title="[+5]"] {
        grid-column: 7;
      }

      .dropdown-link[title="[+25]"] {
        grid-column: 8;
      }

      .dropdown-link[title="[+all]"] {
        grid-column: 9;
      }
    }
  }
}

@mixin panelJobs {
  display: contents !important;

  // Unwrap contents
  .container {
    display: contents !important;

    // Loadout tools
    table {
      display: contents !important;

      tr {
        display: contents !important;

        td:last-child {
          display: contents !important;
        }
      }
    }

    // Container for actual loadout configurations.
    .loadout {
      display: contents !important;

      // Loadout
      >.btn.modern {
        display: contents !important;

        // Loadout Actions
        .btnContent>div {
          display: contents !important;

          .linkContent {
            display: contents !important;
          }
        }
      }
    }
  }

  td {
    // Hide label
    font-size: 0;
    grid-row: 11;

    // Create Loadout
    a.loadoutHref {
      grid-column: 1;
      grid-row: 11;
      @include common.icon-instead(map.get(icons.$icons, "loadoutCreate"));
    }
  }

  // An actual Loadout
  .loadout .btnContent {
    display: grid;
    grid-template-columns: auto;
    grid-column: 3/4;
    align-items: center;

    overflow: hidden;
    border-radius: 50%;
    background-color: var(--color-text);
    color: var(--color-background);
    max-height: calc(var(--font-size-base) * 3);
    max-width: calc(var(--font-size-base) * 3);

    font-size: var(--font-size-base);

    span.btnTitle {
      grid-column: 2 / 10;
      grid-row: 1;

      border: 1px solid pink;
    }

    // Loadout Actions
    .linkContent *,
    a {
      float: none !important;
      padding: 0 !important;

      grid-row: 2;

      font-size: calc(var(--font-size-base) * 0.5);
      line-height: calc(var(--font-size-base) * 0.5);
      color: var(--color-text);
      opacity: 0.5;
    }

    .btnTitle {
      font-size: var(--font-size-base);
      color: var(--color-text);
      @include common.icon-before(map.get(icons.$icons, "loadoutActivate"));
    }

    // Rename
    a.dropdown-link {
      grid-row: 1;
    }

    // Delete
    a.dropdown-link+a.dropdown-link {
      grid-row: 1;
      @include common.icon-instead(map.get(icons.$icons, "delete"));
    }

    a.saveLink {
      grid-row: 1;

      @include common.icon-instead(map.get(icons.$icons, "saveUpdate"));
    }

    // Pin
    a[class=""] {
      padding: 0 !important;

      grid-row: 1;

      font-size: var(--font-size-base);
      color: var(--color-text);
    }
  }

  // Delete all & Toggle Defaults
  .loadout>.loadoutHref {
    float: none !important;

    // #pragma ux_loss
    display: none;

    font-size: var(--font-size-base);
    color: var(--color-text);
  }

  // Toggle Defaults
  .loadout>*:last-child {
    @include common.icon-instead(map.get(icons.$icons, "loadoutDefault"));
  }

  // Actual Job assignments
  .container>.btn.modern {
    display: contents !important;

    // Woodcutter
    &[aria-description~="wood"] {
      @include job(2, map.get(icons.$icons, "woodcutter"));
    }

    // Farmer
    &[aria-description~="catnip"] {
      @include job(3, map.get(icons.$icons, "farmer"));
    }

    // Scholar
    &[aria-description~="science"] {
      @include job(4, map.get(icons.$icons, "scholar"));
    }

    // Hunter
    &[aria-description~="catpower"] {
      @include job(5, map.get(icons.$icons, "hunter"));
    }

    // Miner
    &[aria-description~="mineral"] {
      @include job(6, map.get(icons.$icons, "miner"));
    }

    // Priest
    &[aria-description~="faith"] {
      @include job(7, map.get(icons.$icons, "priest"));
    }

    // Geologist
    &[aria-description~="coal"] {
      @include job(8, map.get(icons.$icons, "geologist"));
    }

    // Engineer
    &[aria-description~="automate"] {
      @include job(9, map.get(icons.$icons, "engineer"));
    }

    // Clear job assignments
    &[aria-description~="all"] .btnContent {
      grid-row: 10;
      @include common.icon-before(map.get(icons.$icons, "clear"));
    }
  }

  // This is a `clear: both` style div to control float-based layout.
  .container> :last-child {
    display: none;
  }
}

@mixin panelManagement {
  display: contents !important;

  // #pragma debug_marker
  * {
    background-color: aqua;
  }

  // Unwrap contents
  .container {
    display: contents !important;

    table {
      display: contents !important;

      tr {
        display: contents !important;

        // The first td is the 'Happiness/Festival Duration' section,
        // which does not need its contents unwrapped.
        td+td {
          display: contents !important;
        }
      }
    }
  }

  // Contents consists of two table columns, which need to be unwrapped.

  // Happiness/Festival Duration
  // Has only text content.
  // This is the top-most row in the UI.
  td:first-child {
    width: initial !important;
    text-align: initial !important;
    cursor: default !important;

    grid-column: 1 / 3;
    grid-row: 1;

    br {
      display: none;
    }
  }

  // Hunt/Festival/Optimize Jobs/Promote Kittens/Present Box
  .btn.modern {
    // #pragma debug_marker
    border: 1px solid hotpink;

    grid-column: 1 / 3;
  }

  // Send hunters
  .btn.modern[aria-description~="hunters"] {
    grid-row: 5;
    grid-column: 2 / 3;
  }

  // Hold Festival
  .btn.modern[aria-description~="festival"] {
    grid-row: 1;
  }

  // Manage Jobs
  .btn.modern[aria-description~="distribution"] {
    grid-row: 11;
  }

  // Promote kittens
  .btn.modern[aria-description~="promotes"] {
    grid-row: 11;
  }

  // Unwrap present box
  .btn.modern[aria-description=""] {
    grid-row: 10;
  }
}

@mixin panelCensus {
  display: contents;

  .container {
    display: contents;

    .currentGovernment {
      display: contents;
    }
  }

  .currentLeader {
    margin-bottom: 0 !important;

    grid-column: 1 / 7;
    position: relative;
    color: var(--color-primary);

    // "Leader:" label
    >span:first-child {
      position: absolute;
      left: 0;
      top: 0;

      color: pink;
    }

    >span.name {
      color: var(--color-primary);
    }
  }

  .censusFilters {
    height: initial !important;

    grid-column: 1 / 7;

    position: absolute;
    right: 0;

    select {
      float: none !important;
      color: var(--color-text);
    }
  }

  // A kitten in the population. 
  // Has 2 rows:
  //   1. Kitten information: Title/age/rank
  //   2. Interaction elements: Favorite/make leader
  .census-block {
    display: grid;
    grid-column: 1 / 7;
    grid-template-columns: subgrid;

    >div:first-child {
      /* Inline styles. */
      display: contents !important;

      .info {
        grid-column: 1 / 7;
        grid-row: 1;

        color: var(--color-text-dim);

        .name {
          color: var(--color-text);
        }
      }

      .skill {
        grid-column: 1 / 4;
        grid-row: 2;

        font-weight: initial !important;

        font-size: calc(var(--font-size-base) * 0.5);
        color: var(--color-text);
      }

      br {
        display: none;
      }
    }

    &.simLeader {
      >div:first-child {
        .info {
          .name {
            color: var(--color-primary);
          }

          @include common.icon-before(map.get(icons.$icons, "makeLeader"));
        }
      }
    }

    .links-container {
      display: contents !important;

      span.btn.modern,
      a.unassignHref {
        display: grid !important;
        width: var(--font-size-base) !important;

        grid-row: 2;

        &.promoteHref {
          grid-column: 3;
          @include common.icon-instead(map.get(icons.$icons, "promote"));
        }

        &.favoriteHref {
          grid-column: 4;
          @include common.icon-instead(map.get(icons.$icons, "favorite"));
        }

        &.leaderHref {
          grid-column: 5;
          @include common.icon-instead(map.get(icons.$icons, "makeLeader"));
        }
      }

      .unassignHref {
        grid-column: 6;
        @include common.icon-instead(map.get(icons.$icons, "unassign"));
      }
    }
  }

  // Pagination
  .container *:last-child {
    display: initial !important;
    width: initial !important;
    text-align: initial !important;
    margin: 0 !important;

    font-size: var(--font-size-base);
    color: var(--color-text);

    .lastHref,
    .nextHref,
    .firstHref,
    .previousHref {
      float: none !important;

      font-size: var(--font-size-base);
      color: var(--color-text);
    }
  }
}

@mixin village {
  display: grid;

  .panelContainer {
    .toggle {
      display: none;
    }

    .title {
      display: none;
    }
  }

  // Jobs
  .panelContainer:nth-child(1) {
    @include panelJobs();
    background-color: hotpink;
  }

  // Map
  .panelContainer:nth-child(2) {
    // #pragma debug_marker
    border: 1px solid pink;
  }

  // Management
  .panelContainer:nth-child(3) {
    @include panelManagement();
  }

  // Census
  .panelContainer:nth-child(4) {
    @include panelCensus();
    background-color: chartreuse;
  }
}