name: Pre-Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      move-tags:
        default: false
        description: Allow tags to be moved? Requires GitHub Release.
        required: false
        type: boolean
      publish-github-release:
        default: false
        description: Create a GitHub release?
        required: false
        type: boolean
      release-tag:
        default: dev
        description: Floating pre-release tag to use.
        type: string
        required: true

concurrency:
  group: pre-release
  cancel-in-progress: false

env:
  # renovate: datasource=node-version depName=node versioning=node
  NODE_VERSION: "22.20.0"

jobs:
  params:
    name: Determine configuration
    outputs:
      move-tags: ${{ github.event_name == 'workflow_dispatch' && inputs.move-tags || 'false' }}
      publish-github-release: ${{ github.event_name == 'workflow_dispatch' && inputs.publish-github-release || 'false' }}
      release-tag: ${{ github.event_name == 'workflow_dispatch' && inputs.release-tag || 'dev' }}
      release-channel: dev
    permissions:
      contents: none
    runs-on: ubuntu-24.04
    steps:
      - if: false
        name: Noop
        run: exit 0

  changelog:
    name: Changelog
    needs:
      - params
    outputs:
      version: ${{ steps.changelog.outputs.version-patch-extended-dev }}
    permissions:
      contents: read
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false
          sparse-checkout: package.json
          sparse-checkout-cone-mode: false

      - id: version
        name: Extract current version
        run: echo "root-version=$(jq --raw-output '.version' package.json)" >> $GITHUB_OUTPUT

      - id: changelog
        name: Generate changelog
        uses: oliversalzburg/action-automatic-semantic-releases@85df1a5f81e6a18f5bb88eb495198b27399066dc # v2.0.0
        with:
          automatic-release-tag: ${{ needs.params.outputs.release-tag }}
          changelog-artifact: changelog.json
          dry-run: true
          publish: false
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          root-version: ${{ steps.version.outputs.root-version }}

      - name: Store changelog
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: changelog.json
          path: changelog.json

  qa:
    name: ðŸ”¹ QA
    uses: ./.github/workflows/qa.yml

  pre-release:
    if: |
      always()
      && contains(needs.*.result, 'success')
      && !contains(needs.*.result, 'failure')
      && needs.params.outputs.publish-github-release == 'true'
    name: Pre-Release
    needs:
      - changelog
      - params
      - qa
    permissions:
      actions: write
      attestations: write
      contents: write
      id-token: write
      packages: write
      pull-requests: read
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false

      - name: Select Node.js version
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org

      - name: Load cached dependencies
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node{{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node${{ env.NODE_VERSION }}

      - name: Build release
        env:
          RELEASE_CHANNEL: ${{ needs.params.outputs.release-channel }}
          RELEASE_VERSION: ${{ needs.changelog.outputs.version }}
        run: make

      - name: Download changelog
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: changelog.json

      - if: success() && needs.params.outputs.publish-github-release == 'true'
        name: Generate GitHub release
        uses: oliversalzburg/action-automatic-semantic-releases@85df1a5f81e6a18f5bb88eb495198b27399066dc # v2.0.0
        with:
          automatic-release-tag: ${{ needs.params.outputs.release-tag }}
          body-suffix: |

            ---
            - Release generated by <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}>
          changelog-artifact: changelog.json
          # If we only _draft_ the release, the release-info action (which runs later)
          # will not find any artifacts to put in the update metadata, because the release is still a draft.
          draft: false
          dry-run: ${{ needs.params.outputs.move-tags == 'false' }}
          files: |
            output/*.css
            output/*.js
          merge-similar: true
          prerelease: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          title: Development Build v${{ needs.changelog.outputs.version }}
          with-authors: false
